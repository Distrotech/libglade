{"name":"Libglade","tagline":"Mirror of git://git.gnome.org/libglade","body":"LIBGLADE\r\n========\r\n\r\nAuthor: James Henstridge <james@daa.com.au>\r\n\r\nThis library allows you to load glade interface files in a program at\r\nruntime.  It doesn't require GLADE to be used, but GLADE is by far the\r\neasiest way to create the interface files.\r\n\r\nFor an idea of how to use the library, see test-libglade.c and\r\nglade/glade-xml.h.\r\n\r\nTo compile, you will need the libxml2 package (aka the gnome-xml\r\nmodule in CVS) which can be found on the GNOME FTP site or its\r\nmirrors.  If you want GNOME support, you will also need the gnome-libs\r\npackage installed.\r\n\r\n\r\nLIBGLADE INTERNALS\r\n==================\r\n\r\nIf you are interested in how libglade works, here is a small\r\ndescription:\r\n\r\nWhen glade_xml_new is called, the XML file is loaded using libxml.\r\nLibglade uses the SAX interface because it is faster and allows me to\r\nstore the data in a more compact representation.  The data in the XML\r\nfile is cached, so that if you load the interface again, the file does\r\nnot need to be reparsed.  If the file has changed though, it will be\r\nreparsed.\r\n\r\nNow glade_xml_build_widget is called for all the toplevel widgets in\r\nthe interface (or if the second argument to glade_xml_new was non\r\nNULL, the widget it refers to is treated as the toplevel).\r\n\r\nFor each of these widgets, they are created by a function specific to\r\nthe widget type, and then glade_xml_build_widget is called for each\r\nchild widget, which is then packed into its parent.  This is done\r\nrecursively, so the whole interface is constructed.\r\n\r\nNew widget types are added to the widget class hash with the\r\nglade_register_widgets function.  For an example, see the end of\r\nglade-gtk.c.\r\n\r\nThe automatic signal connection system uses the introspective\r\ncapabilities of dynamic linking.  By openning a handle on NULL, we can\r\nget at all the global symbols (global functions, global variables) in\r\nthe executable, and the libraries it is linked against.  This is used\r\nto find the address of a signal handler from its name, so that\r\ngtk_signal_connect can be called automatically for you.\r\n\r\nOf course, there are other ways of connecting the signals if your\r\nplatform doesn't support this feature.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}