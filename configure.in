-*- mode: m4 -*-
AC_PREREQ(2.52)
AC_INIT(libglade, 1.99.2,
        [http://bugzilla.gnome.org/enter_bug.cgi?product=libglade])

AC_CONFIG_SRCDIR([test-libglade.c])
AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)

dnl get the gnome-common macros
GNOME_COMMON_INIT

AC_ARG_ENABLE(debug,
  AC_HELP_STRING([--enable-debug], [enable debugging output]),,
  [enable_debug=no])

if test "x$enable_debug" != xno; then
  AC_DEFINE(DEBUG, [Turn on a bit of debugging spew])
fi

AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h, AC_DEFINE(HAVE_UNISTD_H))

AM_PROG_LIBTOOL

AM_PATH_GTK_2_0(1.3.9)

AC_PATH_PROG(PKG_CONFIG, pkg-config, no)

PKG_CHECK_MODULES(XML, libxml-2.0 >= 2.4.1 atk >= 0.6)
AC_SUBST(XML_LIBS)
AC_SUBST(XML_CFLAGS)

dnl checks for the bonobo module ...
AC_ARG_ENABLE(bonobo,
  AC_HELP_STRING([--enable-bonobo], [enable bonobo support (yes/no/auto)]),,
  [enable_bonobo=auto])
build_bonobo=false
if test "x$enable_bonobo" != xno; then
  PKG_CHECK_MODULES(LIBGLADE_BONOBO,
    [libbonoboui-2.0 >= 1.103.0 libxml-2.0 >= 2.4.1 atk >= 0.6],
    build_bonobo=true,
    [if test "x$enable_bonobo" = xyes; then
       AC_MSG_ERROR([Bonobo support requested but libbonoboui-2.0 not found])
     fi])
fi
AC_SUBST(LIBGLADE_BONOBO_CFLAGS)
AC_SUBST(LIBGLADE_BONOBO_LIBS)
AM_CONDITIONAL(BUILD_BONOBO, $build_bonobo)
if $build_gnome; then
    AC_DEFINE(WITH_BONOBO)
fi

dnl checks for the gnome module ...
AC_ARG_ENABLE(gnome,
  AC_HELP_STRING([--enable-gnome], [enable gnome support (yes/no/auto)]),,
  [enable_gnome=auto])
build_gnome=false
if test "x$enable_gnome" != xno; then
  PKG_CHECK_MODULES(LIBGLADE_GNOME,
    [libgnomeui-2.0 >= 1.103.0 libxml-2.0 >= 2.4.1 atk >= 0.6],
    build_gnome=true,
    [if test "x$enable_gnome" = xyes; then
       AC_MSG_ERROR([GNOME support requested but libgnomeui-2.0 not found])
     fi])
fi
AC_SUBST(LIBGLADE_GNOME_CFLAGS)
AC_SUBST(LIBGLADE_GNOME_LIBS)
AM_CONDITIONAL(BUILD_GNOME, $build_gnome)
if $build_gnome; then
    AC_DEFINE(WITH_GNOME)
fi

dnl checks for the canvas module ...
AC_ARG_ENABLE(canvas,
  AC_HELP_STRING([--enable-canvas], [enable canvas support (yes/no/auto)]),,
  [enable_canvas=auto])
build_canvas=false
if test "x$enable_canvas" != xno; then
  PKG_CHECK_MODULES(LIBGLADE_CANVAS,
    [libgnomecanvas-2.0 >= 1.103.0],
    build_canvas=true,
    [if test "x$enable_canvas" = xyes; then
       AC_MSG_ERROR([Canvas support requested but libgnomecanvas-2.0 not found])
     fi])
fi
AC_SUBST(LIBGLADE_CANVAS_CFLAGS)
AC_SUBST(LIBGLADE_CANVAS_LIBS)
AM_CONDITIONAL(BUILD_CANVAS, $build_canvas)
if $build_canvas; then
    AC_DEFINE(WITH_CANVAS)
fi

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)
AM_CONDITIONAL(HAVE_GTK_DOC, $GTKDOC)

dnl gettext stuff ... there is no message catalog for libglade -- libglade
dnl provides translation for the XML files it reads in.
ALL_LINGUAS=""
AM_GLIB_GNU_GETTEXT

dnl stuff to go in the config.h file
AH_TOP(
[#ifndef CONFIG_H
#define CONFIG_H])
AH_BOTTOM(
[#ifdef DEBUG
#  define debug(stmnt) stmnt
#else
#  define debug(stmnt) /* nothing */
#endif

#endif])

AC_OUTPUT([
Makefile
libglade.spec
glade/Makefile
doc/Makefile
libglade-2.0.pc])

rm -f po/po2tbl.sed

echo
echo "This is the development branch of libglade"
echo "If you want something that works with gtk+ 1.2, checkout the"
echo "libglade-1-0 branch with the following command"
echo "  cvs update -r libglade-1-0 ."
echo
