1999-06-11  James Henstridge  <james@daa.com.au>

	* Makefile.am (bin_SCRIPTS): added libglade-xgettext.

	* libglade-xgettext: a small program that can extract translation
	strings from glade XML files.  Libglade itself has no i18n support
	yet, but this is a start.  The program can output both standard pot
	files or a C file that can then be parsed by xgettext.

1999-06-10  James Henstridge  <james@daa.com.au>

	* test-libglade.c (main): updated to call glade_gnome_init() instead
	of glade_init() if GNOME support is enabled.

	* libglade.m4 (module_args): modified macro so that you can pass
	`gnome' as the third argument to get GNOME support.

	* libglade-config.in: you can now pass it the arguments gtk and gnome
	to indicate which widget sets you wish to use.  If you specify
	GNOME, the --libs output will include -lglade-gnome.

	* glade/Makefile.am: create a separate libglade-gnome library if
	GNOME support is enabled.
	
	* glade/glade-gnome.c: implemented the GnomeApp, GnomeAppBar,
	GnomeDock, GnomeDockItem and GtkPixmapItem (sort of).  Just about
	everything displays, except that the GNOMEUIINFO stuff, which is
	not properly implemented at this point in time.

	* glade/glade-gnome.c (about_new): make the about dialog creation
	routine use the values of gnome_app_id and gnome_app_version.

	* glade/glade-tree.c (recurse_tree, destroy_func): the hash table of
	widget name -> xmlNode was broken.  It was freeing the keys before
	they were used.  This bug is from when I was converting libglade
	over to using xmlNodeGetContent().  It should now be possible to
	use the glade_xml_new("filename", "rootnode") style of initialisation,
	and signal handlers that should be connected with
	gtk_signal_connect_object should now work correctly as well.

	* glade/glade-gtk.c (pixmap_new): the filename of the pixmap should
	be relative to the xml file.
	(toolbar_new, toolbar_build_children): fixed up toolbar support.  I
	used code from the examples by Craig M. Buchek and Gary Ross.  The
	actual implementation is different than both, but the sample code
	was very helpful.

	* doc/libglade-sections.txt: added extra entries to documentation.

	* glade/glade-xml.c (glade_xml_set_common_params): new function that
	exposes some of the work that glade_xml_build_widget performs.

	* glade/glade-xml.h, glade/glade-xml.c (glade_xml_relative_file):
	new function that resolves a filename that is relative to the XML
	file for an interface.  This is useful for resolving image file
	names and other external files.
	
	* glade/glade-xml.c (glade_xml_build_widget): make the height and
	width setting code work correctly (before, setting width would unset
	the height and vice versa).

1999-06-09  James Henstridge  <james@daa.com.au>

	* Makefile.am (EXTRA_DIST): added the custom.glade and
	gnome-widgets.glade examples to the distribution.

	* glade/glade-xml.h, glade/glade-xml.c: changed the second argument
	name in glade_xml_signal_connect to handlername, so that people who
	don't want to read the docs do not get confused as easily :)

1999-06-09  Michael Meeks  <michael@edenproject.org>

	* glade/glade-xml.c (glade_xml_new): Added return NULL on error
	(glade_xml_construct): Added boolean - success return value.

1999-06-08  James Henstridge  <james@daa.com.au>

	* Makefile.am (confexec_DATA): install the libgladeConf.sh script.

	* libgladeConf.sh.in: A file for use with the gnome-config shell
	script.

	* glade/glade-gnome.c: added support for GnomeDialog and
	GnomeMessageBox.  This still leaves support for GnomeApp to be done.
	Before this can be finished though, I need to work out the stock
	menu (GnomeUIInfo) stuff.  I don't know how difficult this will be.

1999-06-06  Erik Walthinsen  <omega@cse.ogi.edu>

	* converted libglade.spec to libglade.spec.in, made appropiate
	changes in .cvsignore, Makefile.am, and configure.in.

	* added libglade.m4 to the spec file

1999-06-07  James Henstridge  <james@daa.com.au>

	* custom.glade: an example of using custom widgets.  In this example,
	it creates a color selection widget, but the code could be used for
	creating any widget.  The custom widget code also requires that
	gmodule functions correctly on the system.
	
	* glade/glade-xml.c, glade/glade-gtk.c: don't close the module
	opened by g_module_open(NULL, 0).  Reference counting does not
	apear to be done on this GModule structure.

1999-06-06  Miguel de Icaza  <miguel@gnu.org>

	* glade/glade-xml.c (glade_xml_destroy): Ok, another fix to my
	previous fix: there was no actual memory leak.

	* glade/glade-gtk.c (radiobutton_new): Small bug fix to my
	previous change: Glade might output radio buttons without groups. 

	* glade/glade-xml.c (glade_xml_destroy): Memory leak fix: free all
	the keys (they were strduped strings) when destroying hash tables.

	* glade/glade-gtk.c (radiobutton_new): Add support for
	radio-button-groups. 

	* glade/glade-private.h: Add new hash-table for radio-button
	groups. 

	* glade/glade-xml.c (glade_xml_init): Allocate private structure.
	(glade_xml_destroy): free private structure.
	(glade_xml_build_widget): Use data from private structure.
	(glade_xml_construct): ditto.
	(autoconnect_foreach): ditto.
	(glade_xml_signal_autoconnect): ditto.
	(glade_xml_get_widget): ditto.
	(glade_xml_get_widget_by_long_name): ditto.
	(glade_xml_build_widget): ditto.
	(glade_xml_signal_connect): ditto
	(glade_xml_add_signal): ditto.
	(glade_xml_build_widget): De-ambiguate else clause here.

	* glade/glade-private.h: Moved private GladeXML members to the
	GladeXMLPrivate structure.

1999-06-04  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* glade/glade-gtk.c (optionmenu_new): Only add items if there are
	any actual items.
	(combo_new): ditto.

1999-06-03  James Henstridge  <james@daa.com.au>

	* Makefile.am (m4data_DATA): install the libglade.m4 macro.

	* libglade.m4: added an autoconf macro to detect libglade.

1999-06-06  James Henstridge  <james@daa.com.au>

	* glade/glade-gtk.c: added support for the Custom widget (the widget
	is created with a user defined function).  This should make it easier
	to produce a complete UI from a program, using custom widgets for the
	complicated parts of the UI.

	* glade/glade-gnome.c: added build routines for a few of the
	widgets that are in the current CVS version of GLADE.  I haven't
	done wrappers for GnomeApp, GnomeDialog, GnomeMessageBox and GLADE's
	GnomeUIInfo stuff.

	* glade/glade-gtk.c: removed all the GNOME specific code from this
	file.  Now all GNOME specific stuff is inside glade-gnome.c (except
	for the initialiser in glade-init.c).

	* glade/Makefile.am: add glade-gnome.c to the library if GNOME
	support is enabled.

	* glade/glade-init.c (glade_init): initialise the gnome widgets if
	gnome support has been built in.

	* glade/glade-gnome.c: new file that holds all the GNOME specific
	widget routines.

	* glade/glade-gtk.c: removed container_build_children function, and
	changed all references to it to glade_standard_build_children.

	* glade/glade-build.h: added prototype for the function.

	* glade/glade-xml.c (glade_standard_build_children): added the
	standard child building routine here, as it will be useful to
	both gtk and gnome code.
	(glade_get_adjustment): similar to above.

1999-06-06  James Henstridge  <james@daa.com.au>

	* glade/glade-gtk.c: added support for the Custom widget (the widget
	is created with a user defined function).  This should make it easier
	to produce a complete UI from a program, using custom widgets for the
	complicated parts of the UI.

	* glade/glade-gnome.c: added build routines for a few of the
	widgets that are in the current CVS version of GLADE.  I haven't
	done wrappers for GnomeApp, GnomeDialog, GnomeMessageBox and GLADE's
	GnomeUIInfo stuff.

	* glade/glade-gtk.c: removed all the GNOME specific code from this
	file.  Now all GNOME specific stuff is inside glade-gnome.c (except
	for the initialiser in glade-init.c).

	* glade/Makefile.am: add glade-gnome.c to the library if GNOME
	support is enabled.

	* glade/glade-init.c (glade_init): initialise the gnome widgets if
	gnome support has been built in.

	* glade/glade-gnome.c: new file that holds all the GNOME specific
	widget routines.

	* glade/glade-gtk.c: removed container_build_children function, and
	changed all references to it to glade_standard_build_children.

	* glade/glade-build.h: added prototype for the function.

	* glade/glade-xml.c (glade_standard_build_children): added the
	standard child building routine here, as it will be useful to
	both gtk and gnome code.
	(glade_get_adjustment): similar to above.

1999-06-04  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* glade/glade-gtk.c (optionmenu_new): Only add items if there are
	any actual items.
	(combo_new): ditto.

1999-06-03  James Henstridge  <james@daa.com.au>

	* Makefile.am (m4data_DATA): install the libglade.m4 macro.

	* libglade.m4: added an autoconf macro to detect libglade.

1999-05-27  James Henstridge  <james@daa.com.au>

	* libglade-config.in (libs): add gnome libraries to the link line.
	(the gnome macros evaluate to nothing if gnome is not found).

	* test-libglade.c: small fix so that it will build without gnome.

	* NEWS: updated news.

	* libglade.spec: same here.  Also include documentation in devel
	tarball.

	* configure.in: bumped version number up to 0.1.

1999-05-23  Jacob Berkman  <jberk+@cmu.edu>

	* doc/Makefile.am: added an if GNOME_SUPPORT
	PROBLEM: make dies in doc if libglade has not been installed
	yet.  I tried tinkering a bit but couldn't make it work

1999-05-16  Raja R Harinath  <harinath@cs.umn.edu>

	* glade/Makefile.am (glade-keys.c): Mention explicitly that
	glade-keys.c is built in $(srcdir).
	* glade/glade-gtk.c (button_stock_new): Declare type for `len'.

1999-05-11  James Henstridge  <james@daa.com.au>

	* doc/*: use gtkdoc to generate documentation for libglade.
	
	* glade/glade-xml.c (glade_xml_build_widget): cleaned up some of
	Damon's changes -- I had already added support for the new lowercase
	signal and accelerator tags.  Also added some missing documentation.

	* glade/glade-xml.h, glade/glade-build.h: a few small changes so that
	the documentation builds correctly.
	
	* libglade-config.in: a few small changes to this script.  Include
	the libxml cflags in the output of --cflags.

1999-04-27  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* glade/Makefile.am (EXTRA_DIST): for included-compilation of
	libglade, include the header files manually.

1999-04-26  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* glade/Makefile.am (INCLUDES): Include -I$(srcdir)/.. to get our
	headers to have more precedence over installed headers for an
	existing libglade installation.

1999-04-25  bertrand <Bertrand.Guiheneuf@inria.fr>

	* glade/glade-init.c (glade_load_module): typo fix.

1999-04-25  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* glade/glade-styles.c (glade_style_attach): Use g_strconcat
	instead of a static buffer;
	(fill_style): Use g_strdup_printf instead of static buffer.

	* glade/glade-gtk.c (label_new): Add missing call to free (content).


	* glade/glade-gtk.c: Use <glade/glade-build.h> to fetch headers. 
	* glade/glade-styles.c: ditto. 
	* glade/glade-private.h: ditto.

1999-04-25  Damon Chaplin  <damon@karuna.freeserve.co.uk>

	* glade/glade-xml.c (glade_xml_build_widget): The 'Signal' and
	'Accelerator' tags were changed to lower case in Glade, to be
	consistent with	all other widget tags, so I added support for that.

1999-04-24  James Henstridge  <james@daa.com.au>

	* glade/Makefile.am (INCLUDES): fixed up yet anothe mistake in the
	makefiles.  This should allow libglade to build correctly whether
	it is included as part of a larger package or not.

	* Makefile.am: removed reference to the macros	directory, as they
	break the gnumeric build.  The problem with this is that a
	distributed libglade package would not contain all the files
	needed to build the configure script if you modify the Makefile.am's.

1999-04-24  James Henstridge  <james@daa.com.au>

	* libglade-config.in: don't output -I/usr/include if that is where
	the headers are, as this location is already in the search path.

	* configure.in: removed some unused substitutions.

	* Makefile.am (SUBDIRS): added macros subdirectory.

	* configure.in: set the automake conditional LIBGLADE_FULLDIST to
	true.  When libglade is built as part of the gnumeric build, this
	configure script is not used, so the makefiles use the value of
	LIBGLADE_FULLDIST from the toplevel gnumeric makefile.  Also added
	a call to AM_ACLOCAL_INCLUDE to find the correct macros.

	* glade/glade-init.c, glade/glade-xml.c: added gnome-libs style
	documentation comments to these files, so libglade API docs can be
	generated easily.

1999-04-23  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* glade/glade-gtk.c: Fix.  If we encounter a placeholder, the code
	was dereferencing a null pointer.  

	(misc_set): pad is an integer, align is a float.

1999-04-22  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* test-libglade.c (main): Add GNOME support.  Use
	gnome_init_with_popt_table here.  Use argument parsing the popt
	way. 

	* Makefile.am, glade/Makefile.am: Setup for dual GTK+/GNOME
	compilation. 
	
	* glade/glade-gtk.c (button_stock_new): Add support for GNOME
	stock labels.

	* configure.in (have_gnome): Add autodetection for GNOME
	components. 

1999-04-22  James Henstridge  <james@daa.com.au>

	* test-libglade.c (main): argument parsing code wasn't recognising
	the rootnode argument.  This batch of fixes was sent in by Philippe
	Giacinti (I am still reviewing the local style part of the patch).

	* glade/glade-xml.c (glade_xml_get_type): wasn't saving the object
	type correctly.  Caused problems if more than one GladeXML object
	was created.
	(glade_xml_build_widget): in newer versions of GLADE, it uses the
	signal tag instead of Signal, and accelerator instead of Accelerator.
	Now libglade recognises the new tags as having the same meaning.

	* glade/glade-gtk.c: some small changes for the box and dialog child
	adding routines (I had GTK_PACK_START where it should have been
	"GTK_PACK_START").

1999-04-20  James Henstridge  <james@daa.com.au>

	* configure.in: bumped required version of GTK up to 1.2.0.

	* glade/glade-xml.c, glade/glade-private.h: changed some occurences
	of "char *" to "const char *" to remove warnings made by Miguel's
	change.

1999-04-20  Erik Walthinsen  <omega@cse.ogi.edu>

	* added libglade-config.in, changed Makefile.am and configure.in
	to match and create libglade-config, added to spec file.

1999-04-10  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* glade/glade-xml.h: Tag return values as "const char *" to warn
	the user not to free the results of these.

1999-04-06  James Henstridge  <james@daa.com.au>

	* glade/glade-gtk.c: a few small fixes to make libglade compile
	correctly with newer versions of GTK.

1999-01-13  James Henstridge  <james@daa.com.au>

	* autogen.sh: it wasn't calling autoheader, which caused some trouble.

	* glade/glade-gtk.c: some small changes to make it compile with newer
	versions of gtk.  Also made the function call changes found in
	gtkcompat.h

	* glade/glade-xml.c: gtk_container_border_width -> set_border_width.

1998-11-17  James Henstridge  <james@daa.com.au>
	* glade/glade-styles.c: changed to recognise new style tags.  Basically
	occurences of "fg:" have been changed to "fg-", and similar for other
	parts of the style code.

1998-11-05  James Henstridge  <james@daa.com.au>
	* autogen.sh: added a simple autogen shell script to help with CVS
	builds.

1998-11-05  James Henstridge  <james@daa.com.au>
	* everything: added copyright messages to the code.

1998-11-02  James Henstridge  <james@daa.com.au>
	* glade/Makefile.am, configure.in: I forgot to include the makekeys.awk
	file in the distribution.  This may have caused problems for some
	people.

1998-11-01  James Henstridge  <james@daa.com.au>
	* configure.in: added option --enable-debug.  This will turn on
	debugging output, which is what has been the default in the previous
	version.  Without this flag, the library is quiet, except for errors.
	* glade/glade-xml.c, glade/makekeys.awk: added support for keyboard
	accelerators.  Makekeys.awk creates glade-keys.c, which handles
	keysym to int conversion.  If no accelerators are used in the UI
	description, this adds no overhead.  If there are accelerators, there
	will be a hash table initialisation, and a hash table lookup for each
	accelerator.

1998-10-31  James Henstridge  <james@daa.com.au>
	* glade/glade-xml.c, glade/glade-gtk.c: made changes so that libglade
	works correctly with the changes Daniel made to libxml.  Note that
	since xmlNodeGetContent doesn't use g_malloc, free is used instead
	of g_free.
	Also, no strings inside the xmlDoc structure are referenced in the
	GladeXML widget, so it should be possible to free the xmlDoc
	structure without problems.

1998-10-25  James Henstridge  <james@daa.com.au>
	* glade/glade-gtk.c: updated for glade-0.3.5 widgets.  It now supports
	menus.  I also fixed up the dialog child packing function.
	* test.glade, simple.glade, example.glade: added some examples.
	* glade/glade-init.c: added interface to extend libglade's list of
	widgets dynamically.  Maybe this could be used so that interfaces
	are listed in the XML, and loaded on call.
	* libglade.spec: a spec file for this package.

1998-10-23  James Henstridge  <james@daa.com.au>
	* glade/glade-gtk.c: new file -- this holds all the widget specific
	code for all the widgets in glade-0.3.3.
	* test-libglade.c: new file -- a tester program that can load
	arbitrary interface files.  I can actually get most interfaces to
	load without problem now.
	* glade/glade-xml.c: added support for automatic connection of signals
	with gmodule (you can get access to the global namespace with
	g_module_open(NULL, 0)).

1998-10-20  James Henstridge  <james@daa.com.au>
	* glade/glade-init.c: new file -- initialisation of libglade.
	* glade/glade-tree.c: new file -- handles reading in and caching of
	XML descriptions.  It also extracts the widget tree, and gets the
	styles parsed.
	* glade/glade-styles.c: new file -- Parses styles from an XML tree
	by translating them to the same format as gtkrc files and passing
	them to gtk_rc_parse_string.
	* glade/glade-xml.c: new file -- This file is the exposed interface
	to libglade, and has code used to glue in widget sets to libglade.

